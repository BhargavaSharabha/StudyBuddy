services:
  db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: studybuddy_db
      POSTGRES_USER: studybuddy_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-changeme123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U studybuddy_user -d studybuddy_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - studybuddy_network

  web:
    build: .
    restart: unless-stopped
    ports:
      - "8888:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=ProjStudyBuddy.settings.production
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - studybuddy_network
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 --workers 3 --timeout 120 ProjStudyBuddy.wsgi:application"

  # Optional: Nginx reverse proxy (uncomment if needed)
  # nginx:
  #   image: nginx:alpine
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
  #     - ./nginx/ssl:/etc/nginx/ssl
  #     - static_volume:/app/staticfiles
  #     - media_volume:/app/media
  #   depends_on:
  #     - web
  #   networks:
  #     - studybuddy_network

volumes:
  postgres_data:
  static_volume:
  media_volume:

networks:
  studybuddy_network:
    driver: bridge 